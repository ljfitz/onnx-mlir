//RUN: onnx-mlir --EmitONNXIR --run-torch-pass %s -o=%t >/dev/null && cat %t.onnx.mlir | FileCheck -v %s
module  {
  func @main_graph(%arg0: tensor<?x15xf32>) -> tensor<?x1xf32> attributes {input_names = ["dense_input"], output_names = ["dense_1"]} {
    %0 = "onnx.Constant"() {value = dense<"0xDBFD3C3EF09A723BF93BD03AC889733BA855063B9EAE3B3C755B733BAD42183EE0B7B03CD71F7E3E6C7EF53A54BE683B47A9973DDA882B3BCFA0683BA07A683B64A6CA3D6C74A73B3690183BFC05A83BDB63443B5D354E3BD9ECA73BED7AE23C2FC04E3B7052633D3831743ED4667B3B8C83353B48763D3BC9847A3B065D153E70B6BE3DEF05E93BF1471A3DFBCF973C1F972A3B6807733E965FF33B9AE4F53B969C493BDFE7813B434DF13A6654823B05091F3B125F2E3B4DF8C13D602C823B980E793B3ADC833C7207233BC326903CFE558A3B52FA4B3BC3C68C3C9BEA8D3CF1BE673BCCCD923B7447263B083D933BBA183F3B22E3483BEE26933BFF73CB3DCCA68F3E90FA163CC088293BE5E92F3CFAFB433B72146E3E373D293CEAF72B3C80F425376082753A4C945A39D3FC183E000000800000008065737F3AEACD803AD87F4C3B242F783E7F658E3E0D40993C47837B3B38053C3BFC03963CB165973CAAFF873E51AAE73B01DE203B4976993D1D29543BD103303B0ACBE83B1AD7E83B26D9393BEF53CB3DE320F93A407FBD3B3E922B3B01622E3B0DEABC3BA838BD3BDEFD463B9C66743B0EB5843DFD04753B2AB03B3ECCD1353BDEE2743B4F27143E7D62BC3D8DD1223DD9FEA33ADCBF283DE910FE3A5C03F13A057E4E3D3575273D"> : tensor<15x8xf32>} : () -> tensor<15x8xf32>
    %1 = "onnx.Constant"() {value = dense<[0.00852977391, 0.168265477, 0.00649423245, 0.169964984, 0.00856472272, 0.0122008752, 0.169504166, 0.169468462]> : tensor<8xf32>} : () -> tensor<8xf32>
    %2 = "onnx.Gemm"(%arg0, %0, %1) {alpha = 1.000000e+00 : f32, beta = 1.000000e+00 : f32, transA = 0 : si64, transB = 0 : si64} : (tensor<?x15xf32>, tensor<15x8xf32>, tensor<8xf32>) -> tensor<?x8xf32>
    %3 = "onnx.Constant"() {value = dense<[[0.00501655508], [0.159436852], [0.00367315393], [0.537981451], [0.00364905875], [0.00456042029], [0.323497862], [0.373646796]]> : tensor<8x1xf32>} : () -> tensor<8x1xf32>
    %4 = "onnx.Constant"() {value = dense<0.17070578> : tensor<1xf32>} : () -> tensor<1xf32>
//CHECK: %int[[AVAL:[^ ]*]] = torch.constant.int 0
//CHECK: %int[[BVAL:[^ ]*]] = torch.constant.int 1
//CHECK: torch.aten.transpose.int %9, %int[[AVAL:[^ ]*]], %int[[BVAL:[^ ]*]] :
    %5 = "onnx.Gemm"(%2, %3, %4) {alpha = 1.000000e+00 : f32, beta = 1.000000e+00 : f32, transA = 1 : si64, transB = 1 : si64} : (tensor<?x8xf32>, tensor<8x1xf32>, tensor<1xf32>) -> tensor<?x1xf32>
    return %5 : tensor<?x1xf32>
  }
  "onnx.EntryPoint"() {func = @main_graph, numInputs = 1 : i32, numOutputs = 1 : i32, signature = "[    { \22type\22 : \22float\22 , \22dims\22 : [-1 , 15]  }\0A\0A]\00@[   { \22type\22 : \22float\22 , \22dims\22 : [-1 , 1]  }\0A\0A]\00"} : () -> ()
}

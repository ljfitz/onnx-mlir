//RUN: onnx-mlir --EmitONNXIR --run-torch-pass %s -o=%t >/dev/null && cat %t.onnx.mlir | FileCheck -v %s
module attributes {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu"}  {
  func @main_graph(%arg0: tensor<1x3x22x22xf32>) -> tensor<1x4x4x4xf32> attributes {input_names = ["input.1"], output_names = ["7"]} {
    %0 = "onnx.Constant"() {value = dense<"0xtensor<10x3x5x5xf32>} : () -> tensor<10x3x5x5xf32>
    %1 = "onnx.Constant"() {value = dense<[-0.0322042145, -0.0259752031, 0.0866502374, 0.105018236, -0.0164633803, 0.0107566575, 0.0773589313, 0.0473143049, -0.0915365815, -0.115040816]> : tensor<10xf32>} : () -> tensor<10xf32>
    %2 = "onnx.Conv"(%arg0, %0, %1) {dilations = [1, 1], group = 1 : si64, kernel_shape = [5, 5], onnx_node_name = "Conv_0", pads = [1, 1, 1, 1], strides = [2, 2]} : (tensor<1x3x22x22xf32>, tensor<10x3x5x5xf32>, tensor<10xf32>) -> tensor<1x10x10x10xf32>
    %3 = "onnx.Constant"() {value = dense<"0x9CA8A2BDE93C023DC5E9C83DFF9FD23C9F4B0C3DF22C4EBB76AFA53D255D8C3D745F85BDD88ACE3DB029B4BCF844453D5313BEBD0BE3A63D39579D3CBC6650BC8ABB2D3D2EE4BCBDA14B89BDBB56C7BBD76ADCBBC9DC2ABCAB34B03D9F5F8E3CF491AF3C0497993DCC5699BD74142BBD57E3553D40CB253DA5A7A63DC13FC3BC14A96C3C62AF3A3DD62693BD6A90D7BD899D91BCB9F2B73D9D29683DBB545ABD238B9F3DA73AC4BC77604ABDFC67B43C0645C1BCAA6A8ABD615C52BDD3C00D3B1EE3503D280D5EBD3EFE22BD3C477FBD388398BC6E099B3D8FEF8CBCD6CC313D8A6B03BD9CC88F3D2D0DA63DA32D043DA22E823D9FBF103D498F5C3DF5DC8BBDB3C397BDD596C2BBF72A983CC689B83D4A068A3C87028B3DA49FC73D9B7F403D4804393D0256A03D42EF893A4CD56C3DF4DF573D814B8D3D8DC1DFBC8094D4BD4AB2A1BD9327AF3D9D39BDBD9925DFBB7CAF8FBCF9B314BC99EA7BBC2D2A94BC304BA8BCE6686BBD49C9843D450CBDBD2DC191BDB73B933CEB90C2BD3501763D6667FEBC45B5C23D8EBCACBC1A6581BD5C03963CA9B2A9BDAC15CABDEF4BA6BDAE10C83D81D4B3BDFEE3B7BD4ED6DE3CB7B47F3DBF0E14BDCA1AAD3DAA34B13DE327C9BD16F895BDCF7F6CBD181D50BDE507CDBDD014923D39DBF2BADE0D94BDF1E3E1BC5C9AB3BD60D0A2BCB7B614BC95225D3DE37634BD91F54EBDA445B53D3DD5C1BD6A70ADBD2E85B33DB33523BD079C3E3DB4F6A23D53C293BA94279BBB1444C6BDD75BA2BD5C3481BD85EFA93DE0922F3DA19C65BC85F6FABACA3D8ABCD5C4833D9DE6ACBA6591DE3B648EFBBC0136833DD3036B3D670087BC2067C0BD61D899BDAF9696BD223E77BD90A1193C501FB6BD67EAB23DA3278D3CBCA25D3DBE20363D1D38C8BDECCCB5BD1ACC4DBD1BBC91BD882FD13D7CF95E3D1B8E353D734927BD3F29603DC7B146BD7C51E83CF8A27EBD3DAF74BB65BB69BDA19F53BD136EB23C445614BD34A4D73DF09B52BC6A47173DF40268BBDE9D8CBD2995833DE92580BDF565CC3DC1C9313DF24A51BC1B69D03A4230C5BC9E329D3C178F3D3DA480BB3D5B8007BDC75ED03B51C527BC496392BC09DCC43D07DC953DB3F59EBD865805BC2626AFBB0B0C33BDFC8419BD55C9A73D5DF045BDD2B60E3DA42EAB3DBFAABF39471965BD89ABA1BDDAF24D3DBCE3003DDCD8633D3F72BFBC59DE52BDA6A8C3BD233CD13B84A0AE3C06449CBC42F046BD453197BD530EED3BA417AEBC5F00ECBB3861D0BD157E383DC3C09E3DE42F8EBDBD46A23C974095BCE81335BD0B75A83D6686CD3CD18C693DFAE6C3BD894986BDA18CB0BD7AFB1D3C9B2AFE3A59F5C1BC16AD2C3DC607B13DED1FC0BD157368BDBAC3BFBCE9D7CF3DEB1A983D5A20463C5F95033D48EADCBBBCEBF13C3361B33C7E6805BDFE07C3BC312FC0BD0D7588BA30B03CBD8E9EC1BD5ADDC4BC75B3F4B9FE61903CB926703D9FA5C83D477FF83C0D15BE3CCE487D3D008985BDD2D780BDEE599B3D56CA64BC5FEBD0BDEAE0D5BCB0E17ABD6C815E3C7EF7A53D5555C7BD46F588BD3E7FD03D0AC3933D240C0A3DEB5D393DC60BA1BB1255B63D36B5503CD40B8F3D9ECE2F3D102D723D9365B7BC1C7720BDED7A08BD2776AFBCAB4C3F3CF444AF3C83B8C33DCDC2D43D0BE6983DB124BA3D3B3D173D5F358FBD6278C8BDA5207CBD7E3F75BD9326FA3CAEEE043D17ACB9BD54615A3D292DC63DB5C6A7BD9FB3283DEA34D1BDB491BBBDC7510B3D0431EA3C0E94FB3CB6B7B93DE57BD43CCF76D0BDFF8D3B3DAA34C33D549836BDAC8EBE3DB136D63C48ABABBDFC9B85BDD3BFD6BDC3D3CC3D09603CBD0AEC4EBD5688AB3B14AECD3D6E46E3BC3E16BE3D7F1188BD5EFCB93D5BFEACBDC181B1BD3C3590BD13ED233D2E53B83D9E16A53DFD62793D02334D3D9F01A3BD55D87BBDC2D8B73CEB5AAA3CA753993DE134AEBDE0E6303D72A1713D195987BDC49D053DF98CD23CEF4B55BD409221BDFD146F3C5169963C6692F3BCA31F343D"> : tensor<4x10x3x3xf32>} : () -> tensor<4x10x3x3xf32>
    %4 = "onnx.Constant"() {value = dense<[-0.0964758396, 0.00226509175, 0.0602917597, 0.0401068479]> : tensor<4xf32>} : () -> tensor<4xf32>
    %5 = "onnx.Conv"(%2, %3, %4) {dilations = [1, 1], group = 1 : si64, kernel_shape = [3, 3], onnx_node_name = "Conv_1", pads = [2, 2, 2, 2], strides = [3, 3]} : (tensor<1x10x10x10xf32>, tensor<4x10x3x3xf32>, tensor<4xf32>) -> tensor<1x4x4x4xf32>

    //CHECK: [[ALPHA:%[^ ]*]] = torch.constant.float 0.0099999997764825821
    //CHECK: torch.aten.leaky_relu %15, [[ALPHA]] : !torch.vtensor<[1,4,4,4],f32>, !torch.float -> !torch.vtensor<[1,4,4,4],f32>
   
    %6 = "onnx.LeakyRelu"(%5) {alpha = 0.00999999977 : f32, onnx_node_name = "LeakyRelu_2"} : (tensor<1x4x4x4xf32>) -> tensor<1x4x4x4xf32>
    return %6 : tensor<1x4x4x4xf32>
  }
  "onnx.EntryPoint"() {func = @main_graph, numInputs = 1 : i32, numOutputs = 1 : i32, signature = "[    { \22type\22 : \22f32\22 , \22dims\22 : [1 , 3 , 22 , 22] , \22name\22 : \22input.1\22 }\0A\0A]\00@[   { \22type\22 : \22f32\22 , \22dims\22 : [1 , 4 , 4 , 4] , \22name\22 : \227\22 }\0A\0A]\00"} : () -> ()
}
